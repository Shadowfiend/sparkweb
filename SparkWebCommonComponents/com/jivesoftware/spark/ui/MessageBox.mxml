<?xml version="1.0" encoding="utf-8"?>

<!--
    This file is part of SparkWeb.
    
    SparkWeb is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    SparkWeb is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public License
    along with SparkWeb.  If not, see <http://www.gnu.org/licenses/>.
-->

<mx:VBox creationPolicy="all" borderColor="#ebebeb" styleName="chatMessage" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:jive="com.jivesoftware.groupchat.components.*" 
	verticalScrollPolicy="off" horizontalScrollPolicy="off" verticalGap="0" horizontalGap="0" fontFamily="Lucida Grande, Lucida Sans, Myriad Pro, Arial, sans serif" fontSize="9" >
	<mx:Style>
   		.username { font-weight:bold; color:#959595;}
   		.date { font-weight:normal; color:#959595;}
	</mx:Style>
	<mx:Script><![CDATA[
		import com.inquus.spark.ChatSeparator;
		import com.jivesoftware.spark.utils.SimpleDateFormatter;
		import mx.controls.HRule;
		import mx.core.UIComponent;
		import mx.events.FlexEvent;
		import mx.events.ChildExistenceChangedEvent;
		import mx.controls.TextArea;
		
		private var _userId:String;
		private var _type:String;
		
		private var _userWidget:UIComponent;
		
		public function set userWidget(widget:UIComponent):void
		{
			_userWidget = widget;
			if(_userWidget != null)
			{
				username_container.removeChild(username_label);
				username_container.addChild(_userWidget);
			}
		}
		
		public function get userWidget():UIComponent
		{
			return _userWidget;
		}
		
		public function set userId(userId:String):void {
			this._userId = userId;
		}
		
		public function get userId():String {
			return this._userId;
		}
		
		public function set username(username:String):void {
			username_label.text = username;
		}
		
		public function get username():String {
			return username_label.text;
		}
		
		public function set type(type:String):void {
			this._type = type;
		}
		
		[Bindable]
		public function get type():String {
			return this._type;
		}
		
		public function addMessage(message:String, date:Date, styleName:String = "text", dateStyleName:String = null, extra:UIComponent = null):void {
			var messageArea:MessageElement = new MessageElement();
			messageArea.styleName = styleName;

			if(message_list.numChildren > 0)
			{
				var sep:ChatSeparator = new ChatSeparator();
				sep.background = username_container.getStyle("backgroundColor");
				sep.date = date;
				sep.showdate = date != null;
				message_list.addChild(sep);
			}
			message_list.addChild(messageArea);	

			messageArea.text = message;
			
			if(extra)
				messageArea.addChild(extra);
			
		}
		
		private var _date:Date;
		public function set date(val:Date):void
		{
			_date = val;
		}
		[Bindable]
		public function get date():Date
		{
			return _date;
		}
		
		public function get messageElements():Array
		{
			return message_list.getChildren();
		}
		
		public function setMessageHighlight(usernameColor:String, messageColor:String):void {
			username_container.setStyle("backgroundColor", messageColor);
			
			message_list.setStyle("backgroundColor", messageColor);
			setStyle("borderColor",messageColor);
		}
	]]></mx:Script>
	<mx:HBox backgroundAlpha="1" paddingBottom="2" height="16" backgroundColor="#dbdbdb" id="username_container" borderThickness="0" cornerRadius="12" borderStyle="solid" width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off">
		<mx:Label paddingLeft="5" id="username_label" truncateToFit="true" color="#000000" styleName="username" top="0" bottom="0" textAlign="left"/>
		<mx:Spacer width="100%"/>
		<mx:Label id="time_label" truncateToFit="false" visible="true" width="60" styleName="date" textAlign="right" text="{SimpleDateFormatter.formatDate(date, MessageElement.timeFormat)}" />
	</mx:HBox>
	<mx:VBox paddingLeft="5" borderStyle="none" backgroundAlpha=".1" id="message_list" childAdd="dispatchEvent(new ChildExistenceChangedEvent(ChildExistenceChangedEvent.CHILD_ADD));" height="100%" width="100%" verticalGap="-4" verticalScrollPolicy="off" paddingTop="0" paddingBottom="0" backgroundColor="#ebebeb" paddingRight="0">
	</mx:VBox>
</mx:VBox>
