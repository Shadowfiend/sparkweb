<?xml version="1.0" encoding="utf-8"?>

<!--
    This file is part of SparkWeb.
    
    SparkWeb is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    SparkWeb is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public License
    along with SparkWeb.  If not, see <http://www.gnu.org/licenses/>.
-->


<mx:HBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	doubleClick="ChatContainer.window.startGroupChat(jid, true)" 
	doubleClickEnabled="true" 
	horizontalScrollPolicy="off" 
	verticalScrollPolicy="off" 
	width="100%"
	paddingTop="2" 
	toolTip="{jid}"
	maxHeight="22"
	height="22"
	minHeight="22"
	paddingBottom="0" 
	paddingLeft="10" 
	paddingRight="15" 
	horizontalGap="2"
	implements="mx.managers.IFocusManagerComponent, mx.controls.listClasses.IListItemRenderer">
<mx:Script>
	<![CDATA[
		import org.jivesoftware.xiff.bookmark.GroupChatBookmark;
		import org.jivesoftware.xiff.events.BookmarkChangedEvent;
		import org.jivesoftware.xiff.core.JID;
		import org.jivesoftware.xiff.conference.Room;
		import com.jivesoftware.spark.managers.SparkManager;
		import com.jivesoftware.spark.managers.Localizator;
	
		//TODO: refactor this and BuddyRenderer to have a common superclass

		private var _icon:*;
		
		// Flex builder complains about an undefined property if we don't declare this variable for the parent VBox.
		//private var chatContainer:ChatContainer = SparkManager.chatContainer;
		
		[Embed(source="assets/images/bookmark.png")]
		private static const bookmarkIcon:Class;
		
		public override function set data(value:Object):void
		{
			if(value && value.jid && value.name)
			{
				super.data = value;
				configMenu();
				var updater:Function = function(evt:BookmarkChangedEvent):void {
					configMenu();
					dispatchEvent(new Event('dataUpdated')); //this is a hack to make sure that we update icons and such properly
				};
				
				SparkManager.bookmarkManager.addEventListener(BookmarkChangedEvent.GROUPCHAT_BOOKMARK_ADDED, updater);
				SparkManager.bookmarkManager.addEventListener(BookmarkChangedEvent.GROUPCHAT_BOOKMARK_REMOVED, updater);
				
				dispatchEvent(new Event('dataUpdated'));
			}
		}

		protected function configMenu():void 
		{
		  	var my_cm:ContextMenu = new ContextMenu();
			my_cm.hideBuiltInItems();
			
			if (SparkManager.bookmarkManager.isGroupChatBookmarked(jid)) 
			{
				var removeBMItem:ContextMenuItem = new ContextMenuItem(Localizator.getText("menu.mucitem.removebookmark"));
				removeBMItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removeBookmark);
				my_cm.customItems.push(removeBMItem);
				
				var bookmark:GroupChatBookmark = SparkManager.bookmarkManager.getGroupChatBookmark(jid);
				if (bookmark && bookmark.autoJoin) 
				{
					var removeAJItem:ContextMenuItem = new ContextMenuItem(Localizator.getText("menu.mucitem.cancelautojoin"));
					removeAJItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, cancelAutoJoin);
					my_cm.customItems.push(removeAJItem);					
				}
				else 
				{
					var enableAJItem:ContextMenuItem = new ContextMenuItem(Localizator.getText("menu.mucitem.joinonstartup"));
					enableAJItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, enableAutoJoin);
					my_cm.customItems.push(enableAJItem);					
				}
			}
			else 
			{
				var addBMItem:ContextMenuItem = new ContextMenuItem(Localizator.getText("menu.mucitem.addbookmark"));
				addBMItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, addBookmark);
				my_cm.customItems.push(addBMItem);				
			}
			
			contextMenu = my_cm;			
		}

		private function addBookmark(event:ContextMenuEvent):void 
		{
			SparkManager.bookmarkManager.addGroupChatBookmark(new GroupChatBookmark(roomName, jid));
		}
		
		private function removeBookmark(event:ContextMenuEvent):void
		{
			SparkManager.bookmarkManager.removeGroupChatBookmark(jid);
		}
		
		private function enableAutoJoin(event:ContextMenuEvent):void
		{
			SparkManager.bookmarkManager.setAutoJoin(jid, true);
			configMenu();
		}
		
		private function cancelAutoJoin(event:ContextMenuEvent):void
		{
			SparkManager.bookmarkManager.setAutoJoin(jid, false);
			configMenu();	
		}
		
		[Bindable(event=dataUpdated)]
		public function get roomName():String
		{
			return data.name;
		}
		
		[Bindable(event=dataUpdated)]
		public function get jid():JID
		{
			return data.jid;
		}

	]]>			
</mx:Script>

	<mx:Image id="chatroomIconImage" width="16" height="16" source="{SparkManager.bookmarkManager.isGroupChatBookmarked(jid) ? bookmarkIcon : null}" />
	<mx:Label id="namelabel" text="{roomName}" color="black" fontSize="12" paddingBottom="0" paddingLeft="0" width="100%" paddingTop="3" fontFamily="Lucida Sans, Myriad Pro, Arial, sans serif"  />

</mx:HBox>