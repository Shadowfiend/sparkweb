<?xml version="1.0" encoding="utf-8"?>

<!--
    This file is part of SparkWeb.
    
    SparkWeb is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    SparkWeb is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public License
    along with SparkWeb.  If not, see <http://www.gnu.org/licenses/>.
-->


<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" creationComplete="setup()" verticalGap="0" xmlns:flexlib = "flexlib.controls.*">
	<mx:Script>
		<![CDATA[
			import org.jivesoftware.xiff.core.UnescapedJID;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.collections.ArrayCollection;
			import com.jivesoftware.spark.managers.*;
			import org.jivesoftware.xiff.core.Browser;
			import org.jivesoftware.xiff.conference.Room;
			import com.jivesoftware.spark.ContactListContainer;
			import org.jivesoftware.xiff.data.disco.ItemDiscoExtension;
			import org.jivesoftware.xiff.data.IQ;
			import com.jivesoftware.spark.MUCRoomListItemRenderer;
			
			private var selectedRoom:MUCRoomListItemRenderer;	
			public var populated:Boolean=false;
			private var _jid:UnescapedJID;
			private var searchString:String;

			[Bindable]
			private var rooms:ArrayCollection = new ArrayCollection();
			
			public function set jid(j:UnescapedJID):void 
			{
				_jid = j;
				label = j.toString();
			}
			
			protected function setup():void
			{
				var sort:Sort = new Sort();
				sort.fields = [new SortField("name", true)]
				rooms.sort = sort;
				rooms.refresh();
			}
			
			public function get jid():UnescapedJID {
				return _jid;
			}
			
			public function populate(force:Boolean = false):void 
			{
 				if(!populated || force) 
 				{
 					populated = true; //set it here rather than in populate, since populate is asynchronous
 					new Browser(SparkManager.connectionManager.connection).getServiceItems(jid.escaped, "finishPopulate", this);
 				}
 			}
			
			public function finishPopulate(iq:IQ):void 
			{
				rooms.removeAll();
				var items:Array = iq.getAllExtensions()[0].items;
				for each(var item:Object in items)
				{
					item.jid = new UnescapedJID(item.jid);
				}
				addItems(items);
			}
			
			//items should be {jid:foo, name:bar}
			public function addItems(items:Array):void
			{
				rooms.disableAutoUpdate();
				for each (var item:Object in items)
				{
					for each(var room:Object in rooms)
					{
						if(room.jid.equals(item.jid, false))
						{
							item = null;
							break;
						}
					}
					if(item)
						rooms.addItem(item);
				}
				rooms.enableAutoUpdate();
				trace(rooms.length);
			}
			
			public function showRoomSearch():void
			{
				var dotindex:int = jid.toString().indexOf(".");
				//TODO: fix room search
				//RoomSearchManager.sharedInstance.showSearch(searchString, jid.toString().substr(dotindex + 1), DisplayObjectContainer(Application.application));
			}
			
		]]>
	</mx:Script>
	<mx:TextArea paddingTop="3" backgroundColor="#CCCCCC" borderStyle="none" height="{rooms.length == 0 ? 25 : 0}" editable="false" width="100%" textAlign="center" focusEnabled="false" selectable="false" color="black" maxHeight="{rooms.length == 0 ? NaN : 0}" visible="{rooms.length == 0}" text="{Localizator.getText('label.no.room.bookmarks')}" />
	<mx:HBox backgroundColor="#CCCCCC" paddingBottom="3" paddingTop="3" paddingLeft="3" paddingRight="3" horizontalAlign="center" verticalAlign="middle" verticalGap="0" width="100%" maxHeight="{rooms.length == 0 ? NaN : 0}" visible="{rooms.length == 0}" id="placeholder">
		<mx:VBox>
			<mx:Label width="100%" textAlign="center" focusEnabled="false" selectable="false" alpha="0.0" color="black"  maxWidth="{list.width - 8}" text="{Localizator.getText('label.find.rooms')}" />
			<mx:Label width="100%" textAlign="center" focusEnabled="false" selectable="false" alpha="0.0" color="black" maxWidth="{list.width - 8}" text="{Localizator.getText('label.load.rooms')}" />
		</mx:VBox>
		<mx:Spacer width="35" />
		<mx:VBox>
			<mx:Button id="searchButton" textAlign="center" toolTip="{Localizator.getText('tooltip.find.roomsearch')}" maxWidth="22" height="22" cornerRadius="0" click="showRoomSearch()" icon="@Embed(source='/assets/images/tiny-search.png')"/>
			<mx:Button id="refreshButton" textAlign="center" toolTip="{Localizator.getText('label.load.rooms')}" maxWidth="22" height="22" cornerRadius="0" click="populate(true)" icon="@Embed(source='/assets/images/temp_reload_server_black.png')"/>
		</mx:VBox>
	</mx:HBox>
	<mx:List id="list" visible="{rooms.length > 0}" maxHeight="{rooms.length > 0 ? NaN : 0}" dataProvider="{rooms}" doubleClickEnabled="true" rollOverColor="0xFFCC00" selectionColor="0xDDB000" alternatingItemColors="{[0xAAAAAA, 0xBBBBBB]}" paddingBottom="0" paddingTop="0" paddingRight="0" paddingLeft="0" rowCount="{rooms.length}" itemRenderer="com.jivesoftware.spark.MUCRoomListItemRenderer" width="100%" horizontalScrollPolicy="off">
	</mx:List>
</mx:VBox>