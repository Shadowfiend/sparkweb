<?xml version="1.0" encoding="utf-8"?>

<!--
    This file is part of SparkWeb.
    
    SparkWeb is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    
    SparkWeb is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
    
    You should have received a copy of the GNU Lesser General Public License
    along with SparkWeb.  If not, see <http://www.gnu.org/licenses/>.
-->


<sparkComp:CanvasButtonAccordionHeader 
	verticalScrollPolicy="off" 
	horizontalScrollPolicy="off" 
	xmlns:sparkComp="com.jivesoftware.spark.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="setup()">
	<mx:Script>
	<![CDATA[
		import org.jivesoftware.xiff.core.UnescapedJID;
		import com.jivesoftware.spark.MUCRoomList;
		import com.jivesoftware.spark.ContactListContainer;
		import com.jivesoftware.spark.managers.*;
		import com.jivesoftware.spark.MUCList;
		
		[Bindable]
		private var roomList:MUCRoomList;

		public function setup():void 
		{
			var my_cm:ContextMenu = new ContextMenu();
			my_cm.hideBuiltInItems();
			
			var removeItem:ContextMenuItem = new ContextMenuItem(Localizator.getText("menu.mucserver.remove"));
			removeItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, removeServerBookmark);
			my_cm.customItems.push(removeItem);

			contextMenu = my_cm;
		}
	
		override public function set data(value:Object):void
		{
			if(value is MUCRoomList)
			{
				roomList = value as MUCRoomList;
				super.data = value;
			}
		}
		
		public function get jid():UnescapedJID
		{
			return new UnescapedJID(label);
		}
		
		private function removeServerBookmark(event:ContextMenuEvent):void 
		{
			SparkManager.bookmarkManager.removeGroupChatBookmark(jid);
			ContactListContainer.conferenceList.removeConferenceServer(jid);
		}
	]]>
	</mx:Script>
	<mx:HBox right="4" horizontalGap="0" verticalAlign="middle">
		<mx:LinkButton id="searchButton" click="roomList.showRoomSearch(); event.stopImmediatePropagation();" toolTip="" width="24" height="24" icon="@Embed(source='/assets/images/tiny-search-white.png')"/>
		<mx:LinkButton id="reloadButton" click="roomList.populate(true); event.stopImmediatePropagation();" toolTip="{Localizator.getText('label.load.rooms')}" width="28" height="24" icon="@Embed(source='/assets/images/temp_reload_server.png')"/>
		<mx:LinkButton id="createButton" click="ContactListContainer.conferenceList.createRoom(label); event.stopImmediatePropagation();" toolTip="Create Room" width="22" height="24" icon="@Embed(source='/assets/images/temp_create_room_button.png')"/>
	</mx:HBox>
</sparkComp:CanvasButtonAccordionHeader>
